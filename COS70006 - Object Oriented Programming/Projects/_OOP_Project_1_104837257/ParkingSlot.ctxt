#BlueJ class context
comment0.target=ParkingSlot
comment0.text=\r\n\ The\ ParkingSlot\ class\ represents\ a\ parking\ slot\ in\ the\ car\ park.\r\n\ It\ tracks\ whether\ the\ slot\ is\ occupied\ and\ holds\ information\ about\ the\ parked\ car.\r\n\ @author\ -\ Arun\ Ragavendhar\ -\ 104837257\r\n\ @version\ -\ 1.0\ -\ 06/09/2024\r\n
comment1.params=slotID\ isStaffSlot
comment1.target=ParkingSlot(java.lang.String,\ boolean)
comment1.text=\r\n\ Initializes\ a\ ParkingSlot\ with\ an\ ID\ and\ type.\r\n\ @param\ slotID\ The\ ID\ of\ the\ slot\ (e.g.,\ "S01").\ slot\ ID\ is\ starts\ with\ 'S'\ for\ staff\ and\ 'V'\ for\ visitor\ \r\n\ @param\ isStaffSlot\ True\ if\ it's\ a\ staff\ slot,\ false\ if\ it's\ a\ visitor\ slot.\r\n\ @throws\ IllegalArgumentException\ if\ the\ slot\ ID\ is\ invalid.\r\n
comment10.params=
comment10.target=int\ calculateParkingFee()
comment10.text=\r\n\ Calculates\ the\ parking\ fee\ based\ on\ the\ duration.\r\n\ @return\ The\ parking\ fee\ in\ dollars.\r\n
comment2.params=
comment2.target=java.lang.String\ getSlotID()
comment2.text=\r\n\ Gets\ the\ ID\ of\ the\ slot.\r\n\ @return\ The\ slot\ ID.\r\n
comment3.params=
comment3.target=boolean\ isStaffSlot()
comment3.text=\r\n\ Checks\ if\ the\ slot\ is\ for\ staff.\r\n\ @return\ True\ if\ it's\ a\ staff\ slot,\ false\ otherwise.\r\n
comment4.params=
comment4.target=boolean\ isOccupied()
comment4.text=\r\n\ Checks\ if\ the\ slot\ is\ occupied\ by\ a\ car.\r\n\ @return\ True\ if\ the\ slot\ is\ occupied,\ false\ otherwise.\r\n
comment5.params=
comment5.target=Car\ getCar()
comment5.text=\r\n\ Gets\ the\ car\ parked\ in\ the\ slot.\r\n\ @return\ The\ Car\ object,\ or\ null\ if\ the\ slot\ is\ empty.\r\n
comment6.params=car
comment6.target=void\ parkCar(Car)
comment6.text=\r\n\ Parks\ a\ car\ in\ the\ slot\ and\ records\ the\ current\ time.\r\n\ @param\ car\ The\ Car\ object\ to\ park.\r\n\ @throws\ IllegalStateException\ if\ the\ slot\ is\ already\ occupied.\r\n
comment7.params=
comment7.target=void\ removeCar()
comment7.text=\r\n\ Removes\ the\ car\ from\ the\ slot\ and\ clears\ the\ parked\ time.\r\n\ @throws\ IllegalStateException\ if\ the\ slot\ is\ already\ empty.\r\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\r\n\ Provides\ a\ string\ representation\ of\ the\ slot's\ details,\ including\ the\ parked\ car\ if\ present.\r\n\ @return\ A\ formatted\ string\ with\ slot\ and\ car\ details.\r\n
comment9.params=
comment9.target=java.lang.String\ getParkingDuration()
comment9.text=\r\n\ Calculates\ the\ duration\ the\ car\ has\ been\ parked.\r\n\ @return\ A\ formatted\ string\ showing\ the\ duration.\r\n
numComments=11
